% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{fit_model}
\usage{
fit_model(tr, tipdata, rt_value = mean(tipdata), model = "OU",
  priors = list(alpha = list(df = function(x, a = 1, b = 125, log_scale =
  TRUE) {     dunif(x, min = a, max = b, log = log_scale) }, rf = function(n, a
  = 1, b = 125) {     runif(n, min = a, max = b) }), mu = list(df = function(x,
  a = 0, b = 20, log_scale = TRUE) {     dnorm(x, mean = a, sd = b, log =
  log_scale) }, rf = function(n, a = 0, b = 20) {     rnorm(n, mean = a, sd = b)
  }), sigma = list(df = function(x, a = 1, b = 225, log_scale = TRUE) {    
  dunif(x, min = a, max = b, log = log_scale) }, rf = function(n, a = 1, b =
  225) {     runif(n, min = a, max = b) })), proposals = list(alpha = list(df
  = function(n, alpha, gamma = 0.5, log_scale = TRUE) {     dlnorm(n, meanlog =
  log(alpha), sdlog = gamma, log = log_scale) }, rf = function(n, alpha, gamma =
  0.5) {     rlnorm(n, meanlog = log(alpha), sdlog = gamma) }), mu = list(df =
  function(n, mu, gamma = 0.5, log_scale = TRUE) {     dnorm(n, mean = mu, sd =
  gamma, log = log_scale) }, rf = function(n, mu, gamma = 0.5) {     rnorm(n,
  mean = mu, sd = gamma) }), sigma = list(df = function(n, sigma, gamma = 0.5,
  log_scale = TRUE) {     dlnorm(n, meanlog = log(sigma), sdlog = gamma, log =
  log_scale) }, rf = function(n, sigma, gamma = 0.5) {     rlnorm(n, meanlog =
  log(sigma), sdlog = gamma) })), mcmc_type = "DA", alpha = NULL,
  mu = NULL, sigma = NULL, N = 1000, init_method = "sim",
  update_method = "subtree", iters = 5000, method = "euler",
  fossils = NULL, ...)
}
\arguments{
\item{tr}{Single evolutionary tree as an object of the "phylo" class in
the \code{ape} package.}

\item{tipdata}{A numeric vector containing tip values in the same order as the tip labels in \code{tr$tip.label}.}

\item{rt_value}{Value at the root of \code{tr}.}

\item{model}{Either a list containing drift and diffusion coefficients
in quote format as functions of alpha, mu and sigma,
or a string ("OU", "CIR", or "Beta") specifying the diffusion process.
See Details.}

\item{priors}{A list of lists containing functions for prior distributions
of the model parameters. Use of the default priors is not recommended.}

\item{proposals}{A list of lists containing functions for proposal distributions
of the model parameters.}

\item{mcmc_type}{Type of MCMC algorithm, "DA" or "Fuchs"}

\item{alpha}{Set to NULL if alpha is to be estimated,
otherwise set to a numeric value or a numeric vector specifying
the value of the parameter for all the branches/edges.
In the latter case, the values must be specifying in the same order
as the edges in the \code{tr} object.}

\item{mu}{As \code{alpha}.}

\item{sigma}{As \code{alpha}.}

\item{N}{Data augmentation frequency.}

\item{init_method}{Method for initial data imputation.
Currently only the \code{"sim"} option is available.}

\item{update_method}{Method for data imputation during the MCMC.
Option \code{"subtree"} will only update part of the tree at each iteration,
where as \code{"tree"} will update the whole tree. See Details.}

\item{iters}{Number of MCMC iterations.}

\item{method}{Numerical approximation method, "euler" or "milstein."}

\item{fossils}{A numeric vector containing the tip values for every fossil added to the tree.}

\item{...}{Not used.}
}
\description{
Bayesian Estimator of Parameters of Univariate Diffusion Model for Continuous Trait Evolution
}
\details{
This function estimates posterior distributions for evolutionary
 models of continuous traits in a phylogeny. The evolutionary
 processes considered here belong to a class of diffusion processes
 which are typically given as solutions to the stochastic
 differential equations of the form given by
 \deqn{dX_t = a(X_t, alpha, mu) dt + b(X_t, sigma) dW_t,~~X_0 = x_0}
 where \eqn{X_t} denotes the state variable, \code{t} the time,
 \code{a} the drift function and \code{b}
 the diffusion function are known
 in parametric from which
 \code{alpha}, \code{mu}, and \code{sigma}
 are the parameters, and \eqn{W_t} is Brownian motion.
 The value of \eqn{X_t} at time \eqn{t_0}, \eqn{X_0},
 is independent of \eqn{W_t}.

Given root and tip values, the tree,
 and drift and diffusion functions,
 Markov Chain Monte Carlo (MCMC) estimates
 of the parameters are obtained.
 The parameter to be estimated is assumed to be the same
 for all the branches of the tree; however,
 the rest can be allowed to vary.
 Due to the low frequency nature of the data, the MCMC
 method used assumes intermediate data
 are missing. Thus, during each step of the MCMC iterations,
 missing data and the model parameters are imputed.

If the diffusion process is
 Ornstein-Uhlenbeck (OU),
 Cox-Ingersoll-Ross (CIR), or Beta (Beta)
 this can be specified by setting the
 \code{model} to "OU", "CIR", or
 "Beta", respectively.
 If the diffusion process is not one of these, the estimation of model parameters
 can be done by specifying drift and diffusion coefficients
 in a list assigned to \code{model}. In this case,
 the list object \code{model} must include : 1)
 \code{d} and \code{s} which are
 functions of time (\code{t}), space (\code{x}) and a vector of the parameter values (\code{theta})
 consisting of \code{alpha}, \code{mu} and \code{sigma},
 2) drift coefficients as a list containing
 a \code{quote} and 3) a
 diffusion coefficient as a list object
 which includes \code{diffusion} as
 the diffusion coefficients and
 \code{x} as the first derivatives of
 diffusion coefficients.

The Ornsteinâ€“Uhlenbeck (OU) model is given by
 \deqn{dX_t = alpha (mu - X_t) dt + sigma~ dW_t,}
 with \eqn{X_0 = x_0 > 0}, \eqn{W_t} is the Brownian process,
 alpha, mu, and sigma are the model parameters
 where alpha and sigma are positive values.

The Cox-Ingersoll-Ross (CIR) model is given by
 \deqn{dXt = alpha (mu - X_t) dt + sigma~sqrt(X_t) dWt,}
 with \eqn{X_0 = x_0 > 0}, where Wt is the Brownian process, alpha, mu,
 and sigma are the model parameters which are all
 positive values. If the \code{model == "CIR"} is specified,
 then the parameter estimation is done by
 using transformation \eqn{Y = sqrt(X)} of Ito diffusion
 process.

The Beta model is given by
 \deqn{ dX_t = alpha(mu - X_t) dt + sigma~sqrt(X_t (1-X_t)) dW_t,}
 with \eqn{X_0 = x_0 > 0}, \eqn{W_t} is the Brownian process,
 alpha, mu, and sigma are the model parameters
 where alpha and sigma are positive values.
 If the \code{model ==} "Beta" is specified,
 then the parameter estimation is done by
 using transformation \eqn{Y = 2~sin^{-1}(X)} of Ito diffusion
 process.
}
\seealso{
\code{\link{fossil_id}}
}
